tsn_add: |
  let transaction = db.transaction("books", "readwrite"); // (1)

  // obtiene un almac√©n de objetos para operar con √©l
  let books = transaction.objectStore("books"); // (2)

  let book = {
    id: "js",
    price: 3000,
    created: new Date()
  };

  let request = books.add(book); // (3)

  request.onsuccess = function() { // (4)
    console.log("Libro agregado al almac√©n", request.result)
  }

  request.onerror = function() {
    console.log("Error", request.error);
  }

open_db_version_1: |-
  let openRequest = indexedDB.open("db", 1);

  // se ejecuta la primera vez que se intenta abrir la base de datos
  openRequest.onupgradeneeded = function() {
    let db = openRequest.result;
    db.createObjectStore('object_store1', {keyPath: 'id'});
  };

open_db_version_2: |-
  let openRequest = indexedDB.open("db", 2); // üëà

  // se ejecuta al comprobar que la versi√≥n es mayor a la actual
  openRequest.onupgradeneeded = function() {
    let db = openRequest.result;
    db.createObjectStore('object_store1', {keyPath: 'id'});
    db.createObjectStore('object_store2', {keyPath: 'id'});
  };


object_store_create: |
  let openRequest = indexedDB.open("db", 2);

  // crea/actualiza la base de datos sin chequeo de versiones
  openRequest.onupgradeneeded = function() {
    let db = openRequest.result;
    // si no hay un almac√©n de libros ("books"),
    if (!db.objectStoreNames.contains('books')) {
      // crearlo
      db.createObjectStore('books', {keyPath: 'id'});
    }
  };